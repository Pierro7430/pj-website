// Two pathes for the first step and the final step of animation (for each letter)

const startPath0 = 'M 0.282 231.75 V 123.9 H 88.032 C 91.731 123.9 95.106 124.826 98.157 126.675 C 101.206 128.527 103.656 130.976 105.507 134.025 C 107.356 137.077 108.282 140.452 108.282 144.15 V 173.85 C 108.282 177.45 107.356 180.802 105.507 183.9 C 103.655 187.001 101.206 189.45 98.157 191.25 C 95.106 193.05 91.731 193.95 88.032 193.95 L 18.282 194.1 V 231.75 H 0.282 Z M 20.982 175.8 H 87.432 C 88.131 175.8 88.756 175.552 89.307 175.05 C 89.856 174.551 90.132 173.902 90.132 173.1 V 144.6 C 90.132 143.901 89.856 143.276 89.307 142.725 C 88.756 142.177 88.131 141.9 87.432 141.9 H 20.982 C 20.281 141.9 19.655 142.177 19.107 142.725 C 18.556 143.276 18.282 143.901 18.282 144.6 V 173.1 C 18.282 173.901 18.556 174.551 19.107 175.05 C 19.655 175.552 20.281 175.8 20.982 175.8 Z';
const newPath0 = 'M 0.282 347.75 V 7.9 H 88.032 C 91.731 7.9 95.106 8.826 98.157 10.675 C 101.206 12.527 103.656 14.976 105.507 18.025 C 107.356 21.077 108.282 24.452 108.282 28.15 V 173.85 C 108.282 177.45 107.356 180.802 105.507 183.9 C 103.655 187.001 101.206 189.45 98.157 191.25 C 95.106 193.05 91.731 193.95 88.032 193.95 L 18.282 194.1 V 347.75 H 0.282 Z M 20.982 175.8 H 87.432 C 88.131 175.8 88.756 175.552 89.307 175.05 C 89.856 174.551 90.132 173.902 90.132 173.1 V 28.6 C 90.132 27.901 89.856 27.276 89.307 26.725 C 88.756 26.177 88.131 25.9 87.432 25.9 H 20.982 C 20.281 25.9 19.655 26.177 19.107 26.725 C 18.556 27.276 18.282 27.901 18.282 28.6 V 173.1 C 18.282 173.901 18.556 174.551 19.107 175.05 C 19.655 175.552 20.281 175.8 20.982 175.8 Z';

const startPath1 = 'M 118.33 134.25 V 116.25 H 136.18 V 134.25 H 118.33 Z M 118.33 231.75 V 144.75 H 136.18 V 231.75 H 118.33 Z';
const newPath1 = 'M 118.33 18.25 V 0.25 H 136.18 V 18.25 H 118.33 Z M 118.33 347.75 V 28.75 H 136.18 V 347.75 H 118.33 Z';

const startPath2 = 'M 161.902 228.975 C 158.851 227.126 156.402 224.677 154.552 221.625 C 152.7 218.576 151.777 215.25 151.777 211.65 V 164.85 C 151.777 161.25 152.7 157.927 154.552 154.875 C 156.402 151.826 158.851 149.376 161.902 147.525 C 164.951 145.676 168.277 144.75 171.877 144.75 H 220.027 C 223.726 144.75 227.101 145.65 230.152 147.45 C 233.201 149.25 235.627 151.676 237.427 154.725 C 239.227 157.776 240.127 161.151 240.127 164.85 V 197.25 H 169.627 V 211.05 C 169.627 211.852 169.901 212.527 170.452 213.075 C 171 213.626 171.675 213.9 172.477 213.9 H 240.127 V 231.75 H 171.877 C 168.277 231.75 164.952 230.827 161.902 228.975 Z M 169.627 180.9 H 222.277 V 165.45 C 222.277 164.651 222.001 163.975 221.452 163.425 C 220.901 162.877 220.226 162.6 219.427 162.6 H 172.477 C 171.675 162.6 171 162.876 170.452 163.425 C 169.901 163.976 169.627 164.651 169.627 165.45 V 180.9 Z';
const newPath2 = 'M 161.902 344.975 C 158.851 343.126 156.402 340.677 154.552 337.625 C 152.7 334.576 151.777 331.25 151.777 327.65 V 48.85 C 151.777 45.25 152.7 41.927 154.552 38.875 C 156.402 35.826 158.851 33.376 161.902 31.525 C 164.951 29.676 168.277 28.75 171.877 28.75 H 220.027 C 223.726 28.75 227.101 29.65 230.152 31.45 C 233.201 33.25 235.627 35.676 237.427 38.725 C 239.227 41.776 240.127 45.151 240.127 48.85 V 197.25 H 169.627 V 327.05 C 169.627 327.852 169.901 328.527 170.452 329.075 C 171 329.626 171.675 329.9 172.477 329.9 H 240.127 V 347.75 H 171.877 C 168.277 347.75 164.952 346.827 161.902 344.975 Z M 169.627 180.9 H 222.277 V 49.45 C 222.277 48.651 222.001 47.975 221.452 47.425 C 220.901 46.877 220.226 46.6 219.427 46.6 H 172.477 C 171.675 46.6 171 46.876 170.452 47.425 C 169.901 47.976 169.627 48.651 169.627 49.45 V 180.9 Z';

const startPath3 = 'M 254.826 231.75 V 164.85 C 254.826 161.25 255.75 157.927 257.601 154.875 C 259.45 151.826 261.899 149.376 264.951 147.525 C 268 145.676 271.326 144.75 274.926 144.75 H 323.376 V 162.6 H 275.526 C 274.724 162.6 274.049 162.876 273.501 163.425 C 272.95 163.976 272.676 164.651 272.676 165.45 V 231.75 H 254.826 Z';
const newPath3 = 'M 254.826 347.75 V 48.85 C 254.826 45.25 255.75 41.927 257.601 38.875 C 259.45 35.826 261.899 33.376 264.951 31.525 C 268 29.676 271.326 28.75 274.926 28.75 H 323.376 V 46.6 H 275.526 C 274.724 46.6 274.049 46.876 273.501 47.425 C 272.95 47.976 272.676 48.651 272.676 49.45 V 347.75 H 254.826 Z';

const startPath4 = 'M 332.675 231.75 V 164.85 C 332.675 161.25 333.599 157.927 335.45 154.875 C 337.299 151.826 339.748 149.376 342.8 147.525 C 345.849 145.676 349.175 144.75 352.775 144.75 H 401.225 V 162.6 H 353.375 C 352.573 162.6 351.898 162.876 351.35 163.425 C 350.799 163.976 350.525 164.651 350.525 165.45 V 231.75 H 332.675 Z';
const newPath4 = 'M 332.675 347.75 V 48.85 C 332.675 45.25 333.599 41.927 335.45 38.875 C 337.299 35.826 339.748 33.376 342.8 31.525 C 345.849 29.676 349.175 28.75 352.775 28.75 H 401.225 V 46.6 H 353.375 C 352.573 46.6 351.898 46.876 351.35 47.425 C 350.799 47.976 350.525 48.651 350.525 49.45 V 347.75 H 332.675 Z';

const startPath5 = 'M 421.249 228.975 C 418.197 227.126 415.748 224.677 413.898 221.625 C 412.046 218.576 411.124 215.25 411.124 211.65 V 164.85 C 411.124 161.25 412.047 157.927 413.898 154.875 C 415.748 151.826 418.197 149.376 421.249 147.525 C 424.298 145.676 427.624 144.75 431.224 144.75 H 479.374 C 483.072 144.75 486.447 145.65 489.499 147.45 C 492.548 149.25 494.974 151.676 496.773 154.725 C 498.573 157.776 499.473 161.151 499.473 164.85 V 197.25 H 428.973 V 211.05 C 428.973 211.852 429.247 212.527 429.798 213.075 C 430.346 213.626 431.022 213.9 431.822 213.9 H 499.472 V 231.75 H 431.222 C 427.624 231.75 424.297 230.827 421.249 228.975 Z M 428.973 180.9 H 481.623 V 165.45 C 481.623 164.651 481.346 163.975 480.798 163.425 C 480.247 162.877 479.572 162.6 478.773 162.6 H 431.823 C 431.022 162.6 430.346 162.876 429.799 163.425 C 429.248 163.976 428.974 164.651 428.974 165.45 V 180.9 Z';
const newPath5 = 'M 421.249 344.975 C 418.197 343.126 415.748 340.677 413.898 337.625 C 412.046 334.576 411.124 331.25 411.124 327.65 V 48.85 C 411.124 45.25 412.047 41.927 413.898 38.875 C 415.748 35.826 418.197 33.376 421.249 31.525 C 424.298 29.676 427.624 28.75 431.224 28.75 H 479.374 C 483.072 28.75 486.447 29.65 489.499 31.45 C 492.548 33.25 494.974 35.676 496.773 38.725 C 498.573 41.776 499.473 45.151 499.473 48.85 V 197.25 H 428.973 V 327.05 C 428.973 327.852 429.247 328.527 429.798 329.075 C 430.346 329.626 431.022 329.9 431.822 329.9 H 499.472 V 347.75 H 431.222 C 427.624 347.75 424.297 346.827 421.249 344.975 Z M 428.973 180.9 H 481.623 V 49.45 C 481.623 48.651 481.346 47.975 480.798 47.425 C 480.247 46.877 479.572 46.6 478.773 46.6 H 431.823 C 431.022 46.6 430.346 46.876 429.799 47.425 C 429.248 47.976 428.974 48.651 428.974 49.45 V 180.9 Z';

const startPath6 = 'M 516.121 196.35 V 178.5 H 576.722 V 196.35 H 516.121 Z';
const newPath6 = 'M 516.121 348 V 0 H 576.722 V 348 H 516.121 Z';

const startPath7 = 'M 605.67 231.75 C 601.97 231.75 598.568 230.85 595.471 229.05 C 592.369 227.25 589.92 224.801 588.12 221.7 C 586.32 218.601 585.42 215.2 585.42 211.5 V 200.1 H 603.42 V 210.9 C 603.42 211.601 603.694 212.227 604.245 212.775 C 604.794 213.326 605.42 213.6 606.12 213.6 H 672.57 C 673.268 213.6 673.894 213.326 674.445 212.775 C 674.994 212.227 675.27 211.601 675.27 210.9 V 123.75 H 693.419 V 211.5 C 693.419 215.201 692.493 218.602 690.645 221.7 C 688.793 224.801 686.344 227.25 683.294 229.05 C 680.243 230.85 676.868 231.75 673.169 231.75 H 605.67 Z';
const newPath7 = 'M 605.67 347.75 C 601.97 347.75 598.568 346.85 595.471 345.05 C 592.369 343.25 589.92 340.801 588.12 337.7 C 586.32 334.601 585.42 331.2 585.42 327.5 V 316.1 H 603.42 V 326.9 C 603.42 327.601 603.694 328.227 604.245 328.775 C 604.794 329.326 605.42 329.6 606.12 329.6 H 672.57 C 673.268 329.6 673.894 329.326 674.445 328.775 C 674.994 328.227 675.27 327.601 675.27 326.9 V 7.75 H 693.419 V 327.5 C 693.419 331.201 692.493 334.602 690.645 337.7 C 688.793 340.801 686.344 343.25 683.294 345.05 C 680.243 346.85 676.868 347.75 673.169 347.75 H 605.67 Z';

const startPath8 = 'M 719.746 228.975 C 716.694 227.126 714.271 224.677 712.472 221.625 C 710.671 218.576 709.772 215.25 709.772 211.65 V 144.75 H 727.622 V 211.05 C 727.622 211.852 727.896 212.527 728.447 213.075 C 728.996 213.626 729.671 213.9 730.472 213.9 H 777.421 C 778.221 213.9 778.896 213.626 779.446 213.075 C 779.995 212.526 780.271 211.851 780.271 211.05 V 144.75 H 798.121 V 211.65 C 798.121 215.25 797.222 218.576 795.421 221.625 C 793.621 224.677 791.195 227.126 788.147 228.975 C 785.095 230.827 781.72 231.75 778.022 231.75 H 729.872 C 726.17 231.75 722.795 230.827 719.746 228.975 Z';
const newPath8 = 'M 719.746 344.975 C 716.694 343.126 714.271 340.677 712.472 337.625 C 710.671 334.576 709.772 331.25 709.772 327.65 V 28.75 H 727.622 V 327.05 C 727.622 327.852 727.896 328.527 728.447 329.075 C 728.996 329.626 729.671 329.9 730.472 329.9 H 777.421 C 778.221 329.9 778.896 329.626 779.446 329.075 C 779.995 328.526 780.271 327.851 780.271 327.05 V 28.75 H 798.121 V 327.65 C 798.121 331.25 797.222 334.576 795.421 337.625 C 793.621 340.677 791.195 343.126 788.147 344.975 C 785.095 346.827 781.72 347.75 778.022 347.75 H 729.872 C 726.17 347.75 722.795 346.827 719.746 344.975 Z';

const startPath9 = 'M 820.545 228.975 C 817.493 227.126 815.044 224.677 813.194 221.625 C 811.342 218.576 810.42 215.25 810.42 211.65 V 208.8 H 828.27 V 211.05 C 828.27 211.852 828.544 212.527 829.095 213.075 C 829.644 213.626 830.319 213.9 831.12 213.9 H 878.069 C 878.869 213.9 879.544 213.626 880.094 213.075 C 880.643 212.526 880.919 211.851 880.919 211.05 V 199.95 C 880.919 199.251 880.643 198.626 880.094 198.075 C 879.543 197.526 878.868 197.25 878.069 197.25 H 830.519 C 826.919 197.25 823.593 196.327 820.544 194.475 C 817.492 192.626 815.043 190.177 813.193 187.125 C 811.341 184.076 810.419 180.75 810.419 177.15 V 164.85 C 810.419 161.25 811.342 157.927 813.193 154.875 C 815.043 151.826 817.492 149.376 820.544 147.525 C 823.593 145.676 826.919 144.75 830.519 144.75 H 878.669 C 882.367 144.75 885.742 145.676 888.794 147.525 C 891.843 149.377 894.292 151.826 896.144 154.875 C 897.994 157.927 898.919 161.25 898.919 164.85 V 167.7 H 880.919 V 165.45 C 880.919 164.651 880.643 163.975 880.094 163.425 C 879.543 162.877 878.868 162.6 878.069 162.6 H 831.12 C 830.318 162.6 829.643 162.876 829.095 163.425 C 828.544 163.976 828.27 164.651 828.27 165.45 V 176.55 C 828.27 177.251 828.544 177.877 829.095 178.425 C 829.644 178.976 830.319 179.25 831.12 179.25 H 878.67 C 882.368 179.25 885.743 180.176 888.795 182.025 C 891.844 183.877 894.293 186.326 896.145 189.375 C 897.995 192.427 898.92 195.75 898.92 199.35 V 211.65 C 898.92 215.25 897.994 218.576 896.145 221.625 C 894.293 224.677 891.844 227.126 888.795 228.975 C 885.743 230.827 882.368 231.75 878.67 231.75 H 830.52 C 826.92 231.75 823.594 230.827 820.545 228.975 Z';
const newPath9 = 'M 820.545 344.975 C 817.493 343.126 815.044 340.677 813.194 337.625 C 811.342 334.576 810.42 331.25 810.42 327.65 V 324.8 H 828.27 V 327.05 C 828.27 327.852 828.544 328.527 829.095 329.075 C 829.644 329.626 830.319 329.9 831.12 329.9 H 878.069 C 878.869 329.9 879.544 329.626 880.094 329.075 C 880.643 328.526 880.919 327.851 880.919 327.05 V 199.95 C 880.919 199.251 880.643 198.626 880.094 198.075 C 879.543 197.526 878.868 197.25 878.069 197.25 H 830.519 C 826.919 197.25 823.593 196.327 820.544 194.475 C 817.492 192.626 815.043 190.177 813.193 187.125 C 811.341 184.076 810.419 180.75 810.419 177.15 V 48.85 C 810.419 45.25 811.342 41.927 813.193 38.875 C 815.043 35.826 817.492 33.376 820.544 31.525 C 823.593 29.676 826.919 28.75 830.519 28.75 H 878.669 C 882.367 28.75 885.742 29.676 888.794 31.525 C 891.843 33.377 894.292 35.826 896.144 38.875 C 897.994 41.927 898.919 45.25 898.919 48.85 V 167.7 H 880.919 V 49.45 C 880.919 48.651 880.643 47.975 880.094 47.425 C 879.543 46.877 878.868 46.6 878.069 46.6 H 831.12 C 830.318 46.6 829.643 46.876 829.095 47.425 C 828.544 47.976 828.27 48.651 828.27 49.45 V 176.55 C 828.27 177.251 828.544 177.877 829.095 178.425 C 829.644 178.976 830.319 179.25 831.12 179.25 H 878.67 C 882.368 179.25 885.743 180.176 888.795 182.025 C 891.844 183.877 894.293 186.326 896.145 189.375 C 897.995 192.427 898.92 195.75 898.92 199.35 V 327.65 C 898.92 331.25 897.994 334.576 896.145 337.625 C 894.293 340.677 891.844 343.126 888.795 344.975 C 885.743 346.827 882.368 347.75 878.67 347.75 H 830.52 C 826.92 347.75 823.594 346.827 820.545 344.975 Z';

const startPath10 = 'M 924.043 228.975 C 920.991 227.126 918.568 224.677 916.769 221.625 C 914.968 218.576 914.069 215.25 914.069 211.65 V 117.6 H 931.919 V 144.75 H 966.719 V 162.6 H 931.919 V 211.05 C 931.919 211.852 932.193 212.527 932.744 213.075 C 933.293 213.626 933.968 213.9 934.769 213.9 H 966.718 V 231.75 H 934.168 C 930.468 231.75 927.093 230.827 924.043 228.975 Z';
const newPath10 = 'M 924.043 344.975 C 920.991 343.126 918.568 340.677 916.769 337.625 C 914.968 334.576 914.069 331.25 914.069 327.65 V 1.6 H 931.919 V 28.75 H 966.719 V 46.6 H 931.919 V 327.05 C 931.919 327.852 932.193 328.527 932.744 329.075 C 933.293 329.626 933.968 329.9 934.769 329.9 H 966.718 V 347.75 H 934.168 C 930.468 347.75 927.093 346.827 924.043 344.975 Z';

// All start pathes into a array
const allStartPathes = [startPath0, startPath1, startPath2, startPath3, startPath4, startPath5, startPath6, startPath7, startPath8, startPath9, startPath10];
// All new pathes into a array
const allNewPathes = [newPath0, newPath1, newPath2, newPath3, newPath4, newPath5, newPath6, newPath7, newPath8, newPath9, newPath10];

// Some variables from DOM
const loaderContainer = document.getElementById('loader');

// Some variables
const allLetters = [];
const allInfosPath = [];
const marginLetter = 140;
let scalingPercent = 0;


function calculateDistanceToScale(arrayStartPath, arrayNewPath, scalingPercent) {
  
    const arrayNewPathWithScaling = [];
  
    arrayNewPath.forEach((newPath, index) => {
        const numberNewPath = parseFloat(newPath);
        const numberStartPath = parseFloat(arrayStartPath[index]);
        const distanceBetweenPoints = numberNewPath - numberStartPath;
    
        if(distanceBetweenPoints === 0) {
            arrayNewPathWithScaling.push(newPath);
        }

        else if (isNaN(distanceBetweenPoints)) {
            arrayNewPathWithScaling.push(newPath);
        }
 
        else {
            const distanceDividedByHundred = distanceBetweenPoints / 100;
            const mathDistanceScaling = numberStartPath + (distanceDividedByHundred * scalingPercent * 1.5);
            arrayNewPathWithScaling.push(Number(mathDistanceScaling.toFixed(4)));2
        }
    });

    const newPathWithScaling = arrayNewPathWithScaling.join('');
    return newPathWithScaling;
}

// Transform string in array
function isolateNumber(path) {
    const regex = /[a-zA-Z]|,|\s|[-+]?(\d+\.?\d*|\.\d+)/g;
    const everyNumbersInPath = path.match(regex);
    return everyNumbersInPath;
}

function createDomElement() {
    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    svg.setAttribute('id', 'logo--firstname');
    svg.setAttribute('version', '1.1');
    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');
    svg.setAttribute('x', '0px');
    svg.setAttribute('y', '0px');
    svg.setAttribute('viewBox', '0 0 967 348');
    svg.setAttribute('style', 'enable-background:new 0 0 967 348;');
    svg.setAttribute('xml:space', 'preserve');
    loaderContainer.appendChild(svg);

    const howManyLetters = allStartPathes.length;

    for(let i = 0; i < howManyLetters; i++) {
        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        path.classList.add('letter--svg');
        svg.appendChild(path);
        allLetters.push(path);
    }
}

// Get all pathes (current and new)
function getInfosPath() {

    createDomElement();

    allLetters.forEach((letter, index) => {
        // Get start path
        const startDraw = allStartPathes[index];
        // Put the path in the DOM
        letter.setAttribute('d', allStartPathes[index])
        // Get new path
        const newDraw = allNewPathes[index];
        
        // Put current path in array
        const startDrawArray = isolateNumber(startDraw);
        // Put new path in array
        const newDrawArray = isolateNumber(newDraw);

        // Put infos in object
        const infoPath = {
            order: index,
            currentPathD: startDraw,
            newPathD: newDraw,
            arrayCurrentPath: startDrawArray,
            arrayNewPath: newDrawArray
        };

        // Push object in array
        allInfosPath.push(infoPath);
    });
}

function init() {
    getInfosPath();
}

init();

loaderContainer.addEventListener('mousemove', function (e) {
    
    allLetters.forEach((letter, index) => {
        const infoLetter = letter.getBoundingClientRect();
        const startLetter = infoLetter.left - marginLetter;
        const endLetter = infoLetter.left + infoLetter.width + marginLetter;
        
        if (e.clientX <= endLetter && e.clientX >= startLetter ) {
        
            const rightDistance = endLetter - e.clientX;
            const leftDistance = e.clientX - startLetter;

            const transformToPercent = 100 / ((infoLetter.width + (marginLetter * 2)) / 2);
            const rightDistancePercent = rightDistance * transformToPercent;
            const leftDistancePercent = leftDistance * transformToPercent;
            
            let distancePercent = 0;
            
            if (rightDistancePercent <= 100) {
                distancePercent = rightDistancePercent;
            }

            if (leftDistancePercent <= 100) {
                distancePercent = leftDistancePercent;
            }
            
            scalingPercent = Number(distancePercent.toFixed());
            const pathWithScaling = calculateDistanceToScale(allInfosPath[index].arrayCurrentPath, allInfosPath[index].arrayNewPath, scalingPercent);

            letter.setAttribute('d', pathWithScaling);
        }
        else {
            letter.setAttribute('d', allStartPathes[index]);
        }
    });
});

loaderContainer.addEventListener('mouseleave', (event) => {
    allLetters.forEach((letter, index) => {
        letter.setAttribute('d', allStartPathes[index]);
    });
});